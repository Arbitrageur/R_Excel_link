q()
library(excel.link)
xl.SimpleModel = xl.read.file("C:/Users/DECC/Documents/R_Greg/Excel_link_to_R/SimpleModel.xlsx")
head(xl.SimpleModel)
xls=xl.get.excel()
xl.workbook.add
xl.workbook.add()
rng=xls[["Activesheet"]]$Cells(1,1)
nxt=xl.write(iris,rng,row.names=TRUE,col.names=TRUE)
rng=rng$Offset(nxt[1]+1,0)
nxt=xl.write(cars,rng,row.names=TRUE,col.names=TRUE)
rng=rng$Offset(nxt[1]+1,0)
nxt=xl.write(as.data.frame(Titanic),rng,row.names=TRUE,col.names=TRUE)
xl.sheet.add()
data.set=list("Iris dataset",iris,"Cars dataset",cars,"Titanic dataset",as.data.frame(Titanic))
xl.write(data.sets,rng,row.names=TRUE,col.names=TRUE)
data.sets=list("Iris dataset",iris,"Cars dataset",cars,"Titanic dataset",as.data.frame(Titanic))
xl.write(data.sets,rng,row.names=TRUE,col.names=TRUE)
xl.sheet.add()   #this adds a sheet...
rng=xls[["Activesheet"]]$Cells(1,1)
data.sets=list("Iris dataset",iris,"Cars dataset",cars,"Titanic dataset",as.data.frame(Titanic))
xl.write(data.sets,rng,row.names=TRUE,col.names=TRUE)
xls=xl.get.excel()
library(excel.link) #loads in the excel.link library
xls=xl.get.excel()
xl.workbook.add()
rng=xls[["Activesheet"]]$Cells(1,1)
nxt=xl.write(iris,rng,row.names=TRUE,col.names=TRUE) #this pastes the iris dataset into R
library(excel.link)
xl.workbook.open("C:/Users/DECC/Documents/R_Greg/R_Excel_link/SimpleModel.xlsx")
xl.sheet.activate("model_sheet_2")
input_vector <- c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
input_data <- data.frame(input_vector)
str(input_data)
xl[input.data] <- input_data
output_data <- xl[output.data]
str(output_data)
plot(output_data)
library(excel.link) #loads the excel.link extension library (the first time need to go to Tools,
setwd("C:/Users/DECC/Documents/R_Greg/Excel_link_to_R/")#sets the working directory to where the Excel
setwd("C:/Users/DECC/Documents/R_Greg/Excel_link_to_R/")#sets the working directory to where the Excel
#model is located
library(excel.link) #loads the excel.link extension library (the first time need to go to Tools,
xl.workbook.open("SimpleModel.xlsx") #opens a specific Excel file
xl.sheet.activate("mc_model") #activates the desired worksheet in the Excel model
?mcdata
library(mc2d)
?mcdata
?cornode
library(mc2d)
x1 <-rnorm(1000)
x2 <-rnorm(1000)
x3 <-rnorm(1000)
plot(x1)
plot(x1, x2)
cornode(x1, x2, target=0.5, result=TRUE)
x1x2cor <-cornode(x1, x2, target=0.5, result=TRUE)
x1 <-mcstoc(rnorm(1000))
?round
library(mc2d)
ndvar(100)
conc <- 10
cook <- mcstoc(rempiricalD, values=c(1,1/5,1/50), prob=c(0.027, 0.0373, 0.600))
serving <- mcstoc(rgamma, shape=3.93, rate=0.0806)
expo <- conc * cook * serving
dose <- mcstoc(rpois,lambda=expo)
r <- 0.001
risk <- 1-(1-r)^dose
EC1 <- mc(cook,serving,expo,dose,risk)
print (EC1)
summary(EC1)
cornode(cook, serving, target=0.5, result=TRUE)
library(mc2d)
ndvar(100)
conc <- 10
cook <- mcstoc(rempiricalD, values=c(1,1/5,1/50), prob=c(0.027, 0.0373, 0.600))
serving <- mcstoc(rgamma, shape=3.93, rate=0.0806)
expo <- conc * cook * serving
library(mc2d)
ndvar(100)
conc <- 10
cook <- mcstoc(rempiricalD, values=c(1,1/5,1/50), prob=c(0.027, 0.0373, 0.600))
serving <- mcstoc(rgamma, shape=3.93, rate=0.0806)
cornode(cook, serving, target=0.5, result=TRUE)
expo <- conc * cook * serving
dose <- mcstoc(rpois,lambda=expo)
r <- 0.001
risk <- 1-(1-r)^dose
EC1 <- mc(cook,serving,expo,dose,risk)
print (EC1)
summary(EC1)
plot(cook)
plot(cook, serving)
plot(serving)
library(mc2d)
ndvar(10000)
conc <- 10
cook <- mcstoc(rempiricalD, values=c(1,1/5,1/50), prob=c(0.027, 0.0373, 0.600))
serving <- mcstoc(rgamma, shape=3.93, rate=0.0806)
expo <- conc * cook * serving
dose <- mcstoc(rpois,lambda=expo)
r <- 0.001
risk <- 1-(1-r)^dose
EC1 <- mc(cook,serving,expo,dose,risk)
print (EC1)
summary(EC1)
library(mc2d)
ndvar(10000)
conc <- 10
cook <- mcstoc(rempiricalD, values=c(1,1/5,1/50), prob=c(0.027, 0.0373, 0.600))
serving <- mcstoc(rgamma, shape=3.93, rate=0.0806)
cornode(cook, serving, target=0.5, result=TRUE)
expo <- conc * cook * serving
dose <- mcstoc(rpois,lambda=expo)
r <- 0.001
risk <- 1-(1-r)^dose
EC1 <- mc(cook,serving,expo,dose,risk)
print (EC1)
summary(EC1)
summary(cook)
library(mc2d)
ndvar(10000000)
conc <- 10
cook <- mcstoc(rempiricalD, values=c(1,1/5,1/50), prob=c(0.027, 0.0373, 0.600))
serving <- mcstoc(rgamma, shape=3.93, rate=0.0806)
cornode(cook, serving, target=0.5, result=TRUE)
library(mc2d)
ndvar(1000000)
conc <- 10
cook <- mcstoc(rempiricalD, values=c(1,1/5,1/50), prob=c(0.027, 0.0373, 0.600))
serving <- mcstoc(rgamma, shape=3.93, rate=0.0806)
expo <- conc * cook * serving
dose <- mcstoc(rpois,lambda=expo)
r <- 0.001
risk <- 1-(1-r)^dose
EC1 <- mc(cook,serving,expo,dose,risk)
print (EC1)
summary(EC1)
library(mc2d)
ndvar(1000000)
conc <- 10
cook <- mcstoc(rempiricalD, values=c(1,1/5,1/50), prob=c(0.027, 0.0373, 0.600))
serving <- mcstoc(rgamma, shape=3.93, rate=0.0806)
cornode(cook, serving, target=0.5, result=TRUE)
expo <- conc * cook * serving
dose <- mcstoc(rpois,lambda=expo)
r <- 0.001
risk <- 1-(1-r)^dose
EC1 <- mc(cook,serving,expo,dose,risk)
print (EC1)
summary(EC1)
library(mc2d)
ndvar(1000000)
conc <- 10
cook <- mcstoc(rempiricalD, values=c(1,1/5,1/50), prob=c(0.027, 0.0373, 0.600))
serving <- mcstoc(rgamma, shape=3.93, rate=0.0806)
cornode(cook, serving, target=0.99, result=TRUE)
expo <- conc * cook * serving
dose <- mcstoc(rpois,lambda=expo)
r <- 0.001
risk <- 1-(1-r)^dose
EC1 <- mc(cook,serving,expo,dose,risk)
print (EC1)
summary(EC1)
library(mc2d)
ndvar(1000000)
conc <- 10
cook <- mcstoc(rempiricalD, values=c(1,1/5,1/50), prob=c(0.25, 0.25, 0.50))
serving <- mcstoc(rgamma, shape=3.93, rate=0.0806)
expo <- conc * cook * serving
dose <- mcstoc(rpois,lambda=expo)
r <- 0.001
risk <- 1-(1-r)^dose
EC1 <- mc(cook,serving,expo,dose,risk)
print (EC1)
summary(EC1)
library(mc2d)
ndvar(1000000)
conc <- 10
cook <- mcstoc(rempiricalD, values=c(1,1/5,1/50), prob=c(0.25, 0.25, 0.50))
serving <- mcstoc(rgamma, shape=3.93, rate=0.0806)
cornode(cook, serving, target=0.99, result=TRUE)
expo <- conc * cook * serving
dose <- mcstoc(rpois,lambda=expo)
r <- 0.001
risk <- 1-(1-r)^dose
EC1 <- mc(cook,serving,expo,dose,risk)
print (EC1)
summary(EC1)
library(mc2d)
ndvar(1000000)
conc <- 10
cook <- mcstoc(rempiricalD, values=c(1,1/5,1/50), prob=c(0.25, 0.25, 0.50))
serving <- mcstoc(rgamma, shape=3.93, rate=0.0806)
cookserve <- cbind(cook, serving)
head(cookserve)
cornode(cookserve, target=0.99, result=TRUE)
expo <- conc * cookserve$cook * cookserve$serving
library(mc2d)
ndvar(100)
conc <- 10
cook <- mcstoc(rempiricalD, values=c(1,1/5,1/50), prob=c(0.25, 0.25, 0.50))
serving <- mcstoc(rgamma, shape=3.93, rate=0.0806)
cookserve <- cbind(cook, serving)
cornode(cookserve, target=0.99, result=TRUE)
plot(cookserve)
expo <- conc * cookserve[,1] * cookserve[,2]
head(expo)
cookserve[,1]
cookserve[,2]
cookserveCOR <- cornode(cookserve, target=0.99, result=TRUE)
head(cookserveCOR)
expo <- conc * cookserveCOR[,1] * cookserveCOR[,2]
head(expo)
dose <- mcstoc(rpois,lambda=expo)
risk <- 1-(1-r)^dose
r <- 0.001
risk <- 1-(1-r)^dose
EC1 <- mc(cook,serving,expo,dose,risk)
?mc
cookCOR <- mcstoc(cookserveCOR[,1])
cookCOR <- mcdata(cookserveCOR[,1])
servingCOR <- mcdata(cookserveCOR[,2])
EC1 <- mc(cookCOR,servingCOR,expo,dose,risk)
?mcdata
type(cookCOR)
typeof(cookCOR)
class(cookCOR)
class(serveCOR)
class(servingCOR)
class(expo)
expoMC <-mcdata(expo)
expoMC <-mcdata(expoMC)
class(expoMC)
class(dose)
class(risk)
EC1 <- mc(cookCOR,servingCOR,expo,dose,risk)
EC1 <- mc(cookCOR,servingCOR,expoCOR,dose,risk)
EC1 <- mc(cookCOR,servingCOR,expoMC,dose,risk)
print (EC1)
summary(EC1)
library(mc2d)
ndvar(100)
conc <- 10
cook <- mcstoc(rempiricalD, values=c(1,1/5,1/50), prob=c(0.25, 0.25, 0.50))
serving <- mcstoc(rgamma, shape=3.93, rate=0.0806)
cookserve <- cbind(cook, serving)
cookserveCOR <- cornode(cookserve, target=0.99, result=TRUE)
expo <- conc * cookserveCOR[,1] * cookserveCOR[,2]
expoMC <-mcdata(expo)
dose <- mcstoc(rpois,lambda=expo)
r <- 0.001
risk <- 1-(1-r)^dose
cookCOR <- mcdata(cookserveCOR[,1])
servingCOR <- mcdata(cookserveCOR[,2])
EC1 <- mc(cookCOR,servingCOR,expoMC,dose,risk)
print (EC1)
summary(EC1)
library(mc2d)
ndvar(1000000)
conc <- 10
cook <- mcstoc(rempiricalD, values=c(1,1/5,1/50), prob=c(0.25, 0.25, 0.50))
serving <- mcstoc(rgamma, shape=3.93, rate=0.0806)
expo <- conc * cook * serving
dose <- mcstoc(rpois,lambda=expo)
r <- 0.001
risk <- 1-(1-r)^dose
EC1 <- mc(cook,serving,expo,dose,risk)
print (EC1)
summary(EC1)
library(mc2d)
ndvar(1000000)
conc <- 10
cook <- mcstoc(rempiricalD, values=c(1,1/5,1/50), prob=c(0.25, 0.25, 0.50))
serving <- mcstoc(rgamma, shape=3.93, rate=0.0806)
cookserve <- cbind(cook, serving)
cookserveCOR <- cornode(cookserve, target=0.99, result=TRUE)
cookCOR <- mcdata(cookserveCOR[,1])
servingCOR <- mcdata(cookserveCOR[,2])
expo <- conc * cookserveCOR[,1] * cookserveCOR[,2]
expoMC <-mcdata(expo)
dose <- mcstoc(rpois,lambda=expo)
r <- 0.001
risk <- 1-(1-r)^dose
EC1 <- mc(cookCOR,servingCOR,expoMC,dose,risk)
print (EC1)
summary(EC1)
library(mc2d)
library(excel.link) #loads the excel.link extension library
xl.workbook.open("heat_data.xlsx")
xl.workbook.open("heat_data.xlsx")
setwd("C:/Users/DECC/Documents/Github/R_Excel_link/cluster/")#sets the working directory to where the Excel
xl.workbook.open("heat_data.xlsx")
setwd("C:/Users/DECC/Documents/Github/R_Excel_link/cluster")#sets the working directory to where the Excel
xl.workbook.open("heat_data.xlsx")
xl.workbook.open("heat_data.xlsx")
data <- data.frame(xl[data.heat])
head(data)
data <- data.frame(xl[data.heat])
head(data)
data <- data.frame(xl[data.heat])
head(data)
datas <- data[c(9,10,21)]
head(datas)
names(datas) <- c("HEATROOM", "TEMPHOME", "TOTALBTUSPH")
head(datas)
km <- kmeans(datas[,1:3], 3)
plot(datas[,1], datas[,2], col=km$cluster)
datas <- data[c(10,11,21)]
names(datas) <- c("HEATROOM", "TEMPHOME", "TOTALBTUSPH")
head(datas)
km <- kmeans(datas[,1:3], 3)
plot(datas[,1], datas[,2], col=km$cluster)
plot(datas[,2], datas[,3], col=km$cluster)
data <- data.frame(xl[data.heat])
km
head(km)
head(datas)
datas <- data[c(10,11,21)]
plot(datas[,1], datas[,2], col=km$cluster, xlab="temp at home", ylab="temp out")
plot(datas[,2], datas[,3], col=km$cluster, xlab="temp at home", ylab="temp out")
points(km$centers[,c(1,2)], col=1:3, pch=8, cex=2)
data <- data.frame(xl[data.heat])
datas <- data[c(10,11,21)]
names(datas) <- c("TEMPHOME", "TEMPGONE" "TOTALBTUSPH")
names(datas) <- c("TEMPHOME", "TEMPGONE", "TOTALBTUSPH")
km <- kmeans(datas[,1:3], 3)
plot(datas[,2], datas[,3], col=km$cluster, xlab="temp at home", ylab="temp out")
plot(datas[,1], datas[,2], col=km$cluster, xlab="temp at home", ylab="temp out")
points(km$centers[,c(1,2)], col=1:3, pch=8, cex=2)
plot(datas[,1], datas[,3], col=km$cluster, xlab="temp at home", ylab="temp out")
points(km$centers[,c(1,2)], col=1:3, pch=8, cex=2)
points(km$centers[,c(1,3)], col=1:3, pch=8, cex=2)
plot(datas[,1], datas[,3], col=km$cluster, xlab="temp at home", ylab="temp out")
points(km$centers[,c(1,3)], col=1:3, pch=8, cex=2)
#table(km$cluster, datas$TOTALBTUSPH)
table(km$cluster, datas$TOTALBTUSPH)
xl.sheet.activate("cluster") #activates the desired worksheet in the Excel model
xl[a1] = current.graphics()
png("1.png")
plot(datas[,1], datas[,3], col=km$cluster, xlab="temp at home", ylab="temp out")
points(km$centers[,c(1,3)], col=1:3, pch=8, cex=2)
dev.off()
cluster.plot = current.graphics(filename = "1.png")
xl[a1] = cluster.plot
head(kr)
head(km)
km$cluster
xl[v1] <- km$cluster
xl[v3] <- km$cluster
xl[v4] <- km$cluster
setwd("C:/Users/DECC/Documents/Github/R_Excel_link/cluster")#sets the working directory to where the Excel
#model is located
library(excel.link) #loads the excel.link extension library
xl.workbook.open("heat_data.xlsx")
#xl.sheet.activate("data") #activates the desired worksheet in the Excel model
#(don't ned when using named ranges)
data <- data.frame(xl[data.heat])
datas <- data[c(10,11,21)]
names(datas) <- c("TEMPHOME", "TEMPGONE", "TOTALBTUSPH")
km <- kmeans(datas[,1:3], 3)
png("1.png")
plot(datas[,1], datas[,3], col=km$cluster, xlab="temp at home", ylab="temp out")
points(km$centers[,c(1,3)], col=1:3, pch=8, cex=2)
dev.off()
cluster.plot = current.graphics(filename = "1.png")
xl.sheet.activate("cluster") #activates the desired worksheet in the Excel model
xl[a1] = cluster.plot
#dumps the cluster allocations back into the table
xl[v4] <- km$cluster
km$cluster
setwd("C:/Users/DECC/Documents/Github/R_Excel_link/cluster")#sets the working directory to where the Excel
#model is located
library(excel.link) #loads the excel.link extension library
xl.workbook.open("heat_data.xlsx")
#xl.sheet.activate("data") #activates the desired worksheet in the Excel model
#(don't ned when using named ranges)
data <- data.frame(xl[data.heat])
datas <- data[c(10,11,21)]
names(datas) <- c("TEMPHOME", "TEMPGONE", "TOTALBTUSPH")
km <- kmeans(datas[,1:3], 3)
png("1.png")
plot(datas[,1], datas[,3], col=km$cluster, xlab="temp at home", ylab="temp out")
points(km$centers[,c(1,3)], col=1:3, pch=8, cex=2)
dev.off()
cluster.plot = current.graphics(filename = "1.png")
xl.sheet.activate("cluster") #activates the desired worksheet in the Excel model
xl[a1] = cluster.plot
#dumps the cluster allocations back into the table
xl[v4] <- km$cluster
setwd("C:/Users/DECC/Documents/Github/R_Excel_link/cluster")#sets the working directory to where the Excel
library(excel.link) #loads the excel.link extension library
xl.workbook.open("heat_data.xlsx")
data <- data.frame(xl[data.heat])
datas <- data[c(10,11,21)]
names(datas) <- c("TEMPHOME", "TEMPGONE", "TOTALBTUSPH")
km <- kmeans(datas[,1:3], 3)
png("1.png")
plot(datas[,1], datas[,3], col=km$cluster, xlab="temp at home", ylab="temp out")
points(km$centers[,c(1,3)], col=1:3, pch=8, cex=2)
dev.off()
cluster.plot = current.graphics(filename = "1.png")
xl.sheet.activate("cluster") #activates the desired worksheet in the Excel model
xl[a1] = cluster.plot
xl.sheet.activate("data") #activates the desired worksheet in the Excel model
xl[v4] <- km$cluster
